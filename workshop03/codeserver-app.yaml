apiVersion: apps/v1
kind: Deployment
metadata:
  name: codeserver-deploy
  namespace: codeserverns
  labels:
    app: codeserver
    name: codeserver-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codeserver
      name: codeserver-pod
  template: 
    metadata:
      name: codeserver-container
      namespace: codeserverns
      labels:
        app: codeserver
        name: codeserver-pod
    spec:
      # can add fsgroup here 
      volumes:
        - name: data-vol
          persistentVolumeClaim:
            claimName: codeserver-pvc
      containers:
      - name: codeserver-container
        image: linuxserver/code-server:latest
        imagePullPolicy: IfNotPresent
        resources:
          # minimum amt of resources
          requests:
            memory: 256Mi
            cpu: 200mi
          limits: #maximum 
            memory: 256Mi
            cpu: 200mi
        ports:
        - name: app-port
          containerPort: 8443
        envFrom:
        - configMapRef:
            name: codeserver-config
        - secretRef:
            name: codeserver-secret
        # env:
        # - name: TZ
        #   valueFrom:
        #     configMapKeyRef:
        #       name: codeserver-config
        #       key: TZ
        # - name: DEFAULT_WORKSPACE
        #   valueFrom: 
        #     configMapKeyRef:
        #       name: codeserver-config
        #       key: DEFAULT_WORKSPACE
        # - name: PROXY_DOMAIN
        #   valueFrom: 
        #     configMapKeyRef:
        #       name: codeserver-config
        #       key: PROXY_DOMAIN
        # - name: PASSWORD
        #   valueFrom: 
        #     secretKeyRef:
        #       name: codeserver-secret
        #       key: PASSWORD
        # - name: SUDO_PASSWORD
        #   valueFrom: 
        #     secretKeyRef:
        #       name: codeserver-secret
        #       key: SUDO_PASSWORD
        volumeMounts:
        - name: data-vol
          mountPath: /config/workspace
        resources: {}
        
      

---
apiVersion: v1
kind: Service 
metadata:
  name: codeserver-svc
  namespace: codeserverns
  labels:
    app: codeserver
    name: codeserver-svc
spec:
  type: ClusterIP
  selector:
    app: codeserver
    name: codeserver-pod
  ports:
  - port: 8443
    targetPort: app-port

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codeserver-ing
  namespace: codeserverns
  labels:
    app: codeserver
    name: codeserver-ing
spec:
  ingressClassName: nginx
  rules:
  - host: codeserver.139.59.193.189.nip.io
    http:
      paths: 
      - path: /
        pathType: Prefix 
        backend: 
          service:
            name: codeserver-svc
            port: 
              number: 8443 #service port ont target port 
